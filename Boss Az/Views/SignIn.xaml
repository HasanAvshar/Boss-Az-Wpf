<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                        xmlns:local="clr-namespace:Boss_Az" >

    <Style x:Key="titleText" TargetType="TextBlock">
        <Setter Property="FontSize" Value="36"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="TextAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="#ffffff"/>
    </Style>
    <Style x:Key="normalText" TargetType="TextBlock">
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="LineHeight" Value="28"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="TextAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="#ffffff"/>
    </Style>

    <Style x:Key="button" TargetType="Button">
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Width" Value="170"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="#fdfefe"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" CornerRadius="25" BorderThickness="1" BorderBrush="white" Padding="15">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#e8e8e8"/>
                <Setter Property="Foreground" Value="DimGray"/>
            </Trigger>
            <Trigger Property="IsMouseCaptured" Value="True">
                <Setter Property="Background" Value="#d9d9d9"/>
                <Setter Property="Foreground" Value="DimGray"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="buttonCircle" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Margin" Value="8 0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" CornerRadius="30" BorderThickness="1" BorderBrush="#878787" Padding="15">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#d9d9d9"/>
            </Trigger>
            <Trigger Property="IsMouseCaptured" Value="True">
                <Setter Property="Background" Value="#c4c4c4"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="textHint" TargetType="TextBlock">
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Grid.Column" Value="1"/>
        <Setter Property="Margin" Value="10 0 0 0"/>
        <Setter Property="Foreground" Value="#acb0af"/>
        <Setter Property="Visibility" Value="Hidden"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding ElementName=textBoxEmail, Path=Text.Length}" Value="0">
                <Setter Property="Visibility" Value="Visible"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>
    
    <Style x:Key="textHint1" TargetType="TextBlock">
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Grid.Column" Value="1"/>
        <Setter Property="Margin" Value="10 0 0 0"/>
        <Setter Property="Foreground" Value="#acb0af"/>
        <Setter Property="Visibility" Value="Hidden"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding ElementName=textBoxPassword, Path=Text.Length}" Value="0">
                <Setter Property="Visibility" Value="Visible"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="textBox" TargetType="TextBox">
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Width" Value="180"/>
        <Setter Property="Grid.Column" Value="1"/>
        <Setter Property="Margin" Value="20 0 0 0"/>
        <Setter Property="Foreground" Value="#878787"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Padding" Value="0 5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Grid>
                        <Border x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="5"/>
                        <TextBlock x:Name="hintTextBlock"
                               Text="{TemplateBinding Tag}"
                               Foreground="#acb0af"
                               Margin="5,0,0,0"
                               VerticalAlignment="Center"
                               Visibility="Collapsed"/>
                        <ScrollViewer x:Name="PART_ContentHost" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Text" Value=""/>
                                <Condition Property="IsFocused" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="hintTextBlock" Property="Visibility" Value="Visible"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <Style x:Key="mainbutton" TargetType="Button">
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Width" Value="200"/>
        <Setter Property="Margin" Value="0 20 0 0"/>
        <Setter Property="Background" Value="#3AB19B"/>
        <Setter Property="Foreground" Value="#FDFEFE"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" CornerRadius="25" BorderThickness="1" BorderBrush="#49B7A3" Padding="15">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#339685"/>
                <Setter Property="Foreground" Value="White"/>
            </Trigger>
            <Trigger Property="IsMouseCaptured" Value="True">
                <Setter Property="Background" Value="#2d7a6c"/>
                <Setter Property="Foreground" Value="White"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <ControlTemplate x:Key="SignIn">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="1.5*"/>
            </Grid.ColumnDefinitions>

            <Border CornerRadius="10 0 0 10">
                <Border.Background>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                        <GradientStop Color="#3AA9AD" Offset="0"/>
                        <GradientStop Color="#3AADA1" Offset="1"/>
                    </LinearGradientBrush>
                </Border.Background>

                <Grid>
                    <Canvas>
                        <Polygon Points="0,20,230,140,0,270" Fill="#4EB1B6"/>
                        <Polygon Points="100,400,200,370,180,470" Fill="#4EB1B6"/>
                        <Ellipse Margin="250 450 0 0" Width="40" Height="40" Fill="#4EB1B6"/>
                        <Ellipse Margin="50 400 0 0" Width="20" Height="20" Fill="#4EB1B6"/>
                    </Canvas>

                    <StackPanel VerticalAlignment="Center">
                        <TextBlock Text="Sing Up" Style="{StaticResource titleText}"/>
                        <TextBlock Text="Enter your personal info and create new account to connect us" Style="{StaticResource normalText}" Opacity="0.8" Margin="20 30"/>
                    </StackPanel>
                </Grid>
            </Border>

            <Border Background="#ffffff" Grid.Column="1" CornerRadius="0 10 10 0">
                <StackPanel  VerticalAlignment="Center">
                    <TextBlock Text="Sing in to App" Style="{StaticResource titleText}" Foreground="#3AB19B"/>
                    <StackPanel Orientation="Horizontal" Margin="0 20" HorizontalAlignment="Center">
                        <Button Style="{StaticResource buttonCircle}" Command="{Binding GoogleCommand}">
                            <Image Source="/Images/google.icon.png" Width="30" Height="30"/>
                        </Button>
                        <Button Style="{StaticResource buttonCircle}"  Command="{Binding FacebookCommand}">
                            <Image Source="/Images/facebook.icon.jpg" Width="30" Height="30"/>
                        </Button>
                        <Button Style="{StaticResource buttonCircle}"  Command="{Binding LinkedinCommand}">
                            <Image Source="/Images/linkedin.png" Width="30" Height="30"/>
                        </Button>
                    </StackPanel>

                    <TextBlock Text="or use your email info :" Style="{StaticResource normalText}" Foreground="#878787" Margin="0 10 0 15"/>
                    <Border BorderThickness="1" BorderBrush="#acb0af" Margin="70 7" CornerRadius="5">
                        <Grid Margin="7 9">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <Image Source="/Images/email.png" HorizontalAlignment="Left" Height="20"/>
                            <TextBlock Foreground="DarkGray" Text="Email" Style="{StaticResource textHint}"/>
                            <TextBox x:Name="textBoxEmail" Style="{StaticResource textBox}" Text="{Binding Email, UpdateSourceTrigger=PropertyChanged}"/>
                        </Grid>
                    </Border>

                    <Border BorderThickness="1" BorderBrush="#acb0af" Margin="70 7" CornerRadius="5">
                        <Grid Margin="7 9">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <Image Source="/Images/lock.png" Height="20"/>
                            <TextBlock Foreground="DarkGray" Text="Password" Style="{StaticResource textHint1}"/>
                            <TextBox x:Name="textBoxPassword" Style="{StaticResource textBox}" Text="{Binding Password, UpdateSourceTrigger=PropertyChanged}"/>
                        </Grid>
                    </Border>

                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                        <Label Content="{Binding ErrorMassage}" FontSize="12" Foreground="Red" FontWeight="DemiBold" />
                    </StackPanel>
                    <Button Content="Sign In" Command="{Binding LoginCommand}" CommandParameter="{Binding ElementName=page}" Style="{StaticResource mainbutton}"/>
                    <Button Content="Back" Command="{Binding BackCommand}" CommandParameter="{Binding ElementName=page}" Style="{StaticResource mainbutton}"/>
                </StackPanel>
            </Border>
        </Grid>
    </ControlTemplate>
</ResourceDictionary>